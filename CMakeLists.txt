SET(CMAKE_SYSTEM_NAME Generic)
SET(CMAKE_SYSTEM_VERSION 1)
cmake_minimum_required(VERSION 3.15)

# specify cross compilers and tools
SET(CMAKE_C_COMPILER_WORKS 1)
SET(CMAKE_C_COMPILER arm-none-eabi-gcc)
SET(CMAKE_CXX_COMPILER_WORKS 1)
SET(CMAKE_CXX_COMPILER arm-none-eabi-g++)
set(CMAKE_ASM_COMPILER  arm-none-eabi-gcc)
set(CMAKE_AR arm-none-eabi-ar)
set(CMAKE_OBJCOPY arm-none-eabi-objcopy)
set(CMAKE_OBJDUMP arm-none-eabi-objdump)
set(SIZE arm-none-eabi-size)

set(LINKER_SCRIPT ${CMAKE_SOURCE_DIR}/src/config/default/ATSAMV71Q21B.ld)

SET(FPU_FLAGS "-mfloat-abi=hard -mfpu=fpv4-sp-d16")
add_definitions(-DARM_MATH_CM7 -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING -D__FPU_PRESENT=1)

SET(COMMON_FLAGS
    "-mcpu=cortex-m7 ${FPU_FLAGS} -mthumb -mthumb-interwork -ffunction-sections -fdata-sections \
    -fno-common -fmessage-length=0 -specs=nosys.specs -specs=nano.specs")

SET(CMAKE_CXX_FLAGS_INIT "${COMMON_FLAGS}")
SET(CMAKE_C_FLAGS_INIT "${COMMON_FLAGS}")
SET(CMAKE_EXE_LINKER_FLAGS_INIT "-Wl,-gc-sections,--print-memory-usage -T ${LINKER_SCRIPT}")

include_directories(inc)
include_directories(src/config/default)
include_directories(lib/FreeRTOS/Source/include)
include_directories(lib/FreeRTOS/Source/portable/GCC/SAM/CM7)
include_directories(lib/cobs-c)
include_directories(src/packs/ATSAMV71Q21B_DFP)
include_directories(src/packs/CMSIS/CMSIS/Core/Include)

# project settings
project(fdir-demo C CXX ASM)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_C_STANDARD 11)

file(GLOB_RECURSE SOURCES "src/*.c" "src/*.cpp" "AutoGenerated.X/*.c")
file(GLOB_RECURSE FREERTOS_SOURCES "lib/FreeRTOS/*.c")
file(GLOB_RECURSE EXTRA_SOURCES "lib/cobs-c/cobs.c")
add_executable(${PROJECT_NAME}.elf ${SOURCES} ${FREERTOS_SOURCES} ${EXTRA_SOURCES} ${LINKER_SCRIPT})

# Support for ECSS services
add_subdirectory(lib/ecss-services EXCLUDE_FROM_ALL)
target_link_libraries(${PROJECT_NAME}.elf common)
include_directories(
        "${PROJECT_SOURCE_DIR}/lib/ecss-services/inc"
        "${PROJECT_SOURCE_DIR}/lib/ecss-services/lib/etl/include"
)

set(CMAKE_EXE_LINKER_FLAGS
        "${CMAKE_EXE_LINKER_FLAGS} -Wl,-Map=${PROJECT_BINARY_DIR}/${PROJECT_NAME}.map")
set(HEX_FILE ${PROJECT_BINARY_DIR}/${PROJECT_NAME}.hex)
set(BIN_FILE ${PROJECT_BINARY_DIR}/${PROJECT_NAME}.bin)


set(CMAKE_VERBOSE_MAKEFILE ON)




